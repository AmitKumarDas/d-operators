---
name: Unit Test, E to E Test and Github Release (if on master)
on: [push, pull_request]
jobs:
  unittest:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        test: ['test']
    name: ${{ matrix.test }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup GOPATH
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.5
      - run: make ${{ matrix.test }}
  e2etest:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        test: ['e2e-test']
    name: ${{ matrix.test }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup GOPATH
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.5
      - run: sudo make ${{ matrix.test }}
  release:
    name: Make Github Release
    runs-on: ubuntu-18.04
    needs: ['unittest', 'e2etest']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install NPM Dependencies to Make Release
        run: npm install ci
      - name: Make Semantic Release
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: npx semantic-release

  push-latest:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        push: ['push-latest']
    name: ${{ matrix.push }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push dope latest image
        - run: make ${{ matrix.push }}
      - name: Build and push d-action latest image
        run: |
          cd tools/d-action
          make ${{ matrix.push }}