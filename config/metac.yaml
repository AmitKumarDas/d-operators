apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-blockdeviceset
  namespace: dope
spec:
  # resource with kind BlockDeviceSet is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: blockdevicesets
  # following resources are either read or applied:
  #
  # - BlockDevice (applied)
  attachments:
  - apiVersion: openebs.io/v1alpha1
    resource: blockdevices
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select BlockDevice resources if its annotation
        #
        # matches BlockDeviceSet _(read watch)_ UID
        - key: metadata.annotations.blockdeviceset\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  hooks:
    sync:
      inline:
        funcName: sync/blockdeviceset
---
apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-directorhttp
  namespace: dope
spec:
  # resource with kind DirectorHTTP is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: directorhttps
  # following resources are either read or applied:
  #
  # - HTTPData (read)
  # - HTTP (applied)
  attachments:
  - apiVersion: dao.mayadata.io/v1alpha1
    resource: httpdatas
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select HTTPData resources if its name
        # matches DirectorHTTP _(read watch)_ spec.httpDataName
        - key: metadata.name
          refKey: spec.httpDataName
  - apiVersion: dao.mayadata.io/v1alpha1
    resource: https
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select HTTP resources if its annotation
        # directorhttp.dao.mayadata.io/uid matches 
        # DirectorHTTP _(read watch)_ UID
        - key: metadata.annotations.directorhttp\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  hooks:
    sync:
      inline:
        funcName: sync/directorhttp
---
apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-http
  namespace: dope
spec:
  # resource with kind HTTP is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: https
  hooks:
    sync:
      inline:
        funcName: sync/http
---
apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-cspcaprecommendation
  namespace: dope
spec:
  # resource with kind CStorPoolCapacityRecommendation is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: cstorpoolcapacityrecommendations
  # following resources are either read or applied:
  #
  # - HTTPData (read)
  # - HTTP (applied)
  attachments:
  - apiVersion: dao.mayadata.io/v1alpha1
    resource: httpdatas
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select HTTPData resources if its name
        # matches CStorPoolCapacityRecommendation _(read watch)_
        # spec.httpDataName
        - key: metadata.name
          refKey: spec.httpDataName
  - apiVersion: dao.mayadata.io/v1alpha1
    resource: https
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select HTTP resources if its annotation
        # cspc-capacity-recommend.dao.mayadata.io/uid
        # matches CStorPoolCapacityRecommendation _(read watch)_ UID
        - key: metadata.annotations.cspc-capacity-recommend\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  hooks:
    sync:
      inline:
        funcName: sync/cspcaprecommendation
---
apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-cstorpoolauto
  namespace: dope
spec:
  # resource with kind CStorPoolAuto is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: cstorpoolautos
  # following resources are either read or applied:
  #
  # - StatefulSet (read)
  # - CustomResourceDefinition (applied)
  attachments:
  - apiVersion: apps/v1
    resource: statefulsets
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select StatefulSet resources if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # CStorPoolAuto's _(read watch)_ UID
        - key: metadata.annotations.cstorpoolauto\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  - apiVersion: apiextensions.k8s.io/v1beta1
    resource: customresourcedefinitions
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select CustomResourceDefinitions if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # CStorPoolAuto's _(read watch)_ UID
        - key: metadata.annotations.cstorpoolauto\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  - apiVersion: v1
    resource: serviceaccounts
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select ServiceAccount resources if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # CStorPoolAuto's _(read watch)_ UID
        - key: metadata.annotations.cstorpoolauto\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  - apiVersion: rbac.authorization.k8s.io/v1
    resource: clusterroles
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select ClusterRole resources if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # CStorPoolAuto's _(read watch)_ UID
        - key: metadata.annotations.cstorpoolauto\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  - apiVersion: rbac.authorization.k8s.io/v1
    resource: clusterrolebindings
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select ClusterRoleBinding resources if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # CStorPoolAuto's _(read watch)_ UID
        - key: metadata.annotations.cstorpoolauto\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  hooks:
    sync:
      inline:
        funcName: sync/cstorpoolauto
---
apiVersion: metac.openebs.io/v1alpha1
kind: GenericController
metadata:
  # namespace & name combination should be unique
  # across all the GenericControllers in this file
  name: sync-doperator
  namespace: dope
spec:
  # resource with kind CStorPoolAuto is watched
  watch:
    apiVersion: dao.mayadata.io/v1alpha1
    resource: doperators
  # following resources are either read or applied:
  #
  # - StatefulSet (read)
  # - CustomResourceDefinition (applied)
  attachments:
  - apiVersion: apiextensions.k8s.io/v1beta1
    resource: customresourcedefinitions
    advancedSelector:
      selectorTerms:
      - matchReferenceExpressions:
        # select CustomResourceDefinitions if its annotation
        # cstorpoolauto.dao.mayadata.io/uid matches
        # DOperator's _(read watch)_ UID
        - key: metadata.annotations.doperator\.dao\.mayadata\.io/uid
          refKey: metadata.uid
  hooks:
    sync:
      inline:
        funcName: sync/doperator